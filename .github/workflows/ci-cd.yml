name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Type check
        run: npm run typecheck
      
      - name: Test
        run: npm run test:ci
        env:
          NODE_ENV: test
      
      - name: E2E tests
        run: |
          npx playwright install --with-deps
          npm run test:e2e:ci
      
      - name: Bundle analysis
        run: npm run analyze
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            playwright-report/
            coverage/
            test-results/

  security:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Security audit
        run: npm audit
      
      - name: OWASP ZAP scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: 'https://staging.portfolio.dev'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
      
      - name: Snyk scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  performance:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Size limit
        run: npm run size
      
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://staging.portfolio.dev
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './.lighthouserc.json'
      
      - name: Load testing
        run: |
          npm install -g k6
          k6 run load-tests/performance.js

  visual-regression:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run visual regression tests
        run: npm run test:visual
      
      - name: Upload visual test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: visual-test-results
          path: src/tests/visual/__snapshots__

  deploy:
    needs: [quality, security, performance, visual-regression]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Deploy to Cloudflare
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      
      - name: Run smoke tests
        run: npm run test:smoke
        env:
          BASE_URL: ${{ github.ref == 'refs/heads/main' && 'https://portfolio.dev' || 'https://staging.portfolio.dev' }}
      
      - name: Verify deployment
        run: |
          curl --fail ${{ github.ref == 'refs/heads/main' && 'https://portfolio.dev' || 'https://staging.portfolio.dev' }}
      
      - name: Rollback on failure
        if: failure()
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          command: rollback
